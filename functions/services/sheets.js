// functions/services/sheets.js (Safe version)
const { sheets } = require('../config/google');
const { getCurrentTimestamp } = require('../utils/datetime');

class SheetsService {
  constructor() {
    this.sheetId = process.env.SHEET_ID || '1ez_Dox16jf9lr5TEsLL5BEOfKZDNGkVD31YSBtx3Qa8';
  }

  // ‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à QC ‡∏à‡∏≤‡∏Å sheet
  async getQCTopics() {
    try {
      console.log('üìã Reading QC topics from sheet:', this.sheetId);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ sheets client ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!sheets) {
        console.warn('‚ö†Ô∏è Google Sheets API not available, using mock data');
        return this.getMockTopics();
      }
      
      const response = await sheets.spreadsheets.values.get({
        spreadsheetId: this.sheetId,
        range: '‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à QC!A:B',
      });

      const rows = response.data.values || [];
      const topics = {};

      rows.slice(1).forEach(([category, topic]) => {
        if (category && topic) {
          if (!topics[category]) {
            topics[category] = [];
          }
          topics[category].push(topic.trim());
        }
      });

      console.log(`üìã Loaded ${Object.keys(topics).length} categories from Google Sheets`);
      return Object.keys(topics).length > 0 ? topics : this.getMockTopics();
      
    } catch (error) {
      console.error('‚ùå Error reading QC topics:', error.message);
      console.log('üìã Falling back to mock data');
      return this.getMockTopics();
    }
  }

  // Mock data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets ‡πÑ‡∏î‡πâ
  /*getMockTopics() {
    return {
      '‡∏á‡∏≤‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á': [
        '‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡∏ú‡∏±‡∏á',
        '‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï',
        '‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏´‡∏•‡πá‡∏Å‡πÄ‡∏™‡∏£‡∏¥‡∏°',
        '‡∏Å‡∏≤‡∏£‡∏ö‡πà‡∏°‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï',
        '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á'
      ],
      '‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏õ‡∏±‡∏ï‡∏¢‡∏Å‡∏£‡∏£‡∏°': [
        '‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ú‡∏ô‡∏±‡∏á',
        '‡∏Å‡∏≤‡∏£‡∏â‡∏≤‡∏ö‡∏ú‡∏ô‡∏±‡∏á',
        '‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏™‡∏µ',
        '‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á',
        '‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡∏ï‡∏π'
      ],
      '‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö': [
        '‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤',
        '‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏õ‡∏≤',
        '‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏£‡πå',
        '‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡∏±‡∏ö‡πÄ‡∏û‡∏•‡∏¥‡∏á',
        '‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£'
      ]
    };
  }*/

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏•‡∏á Master_Photos_Log
  async logPhoto(photoData) {
    try {
      console.log('üì∏ Logging photo data:', photoData.filename);
      
      if (!sheets) {
        console.warn('‚ö†Ô∏è Google Sheets API not available, skipping photo log');
        return { success: true, message: 'Photo logged locally' };
      }

      // TODO: Implement Google Sheets logging
      return { success: true, message: 'Photo logged successfully' };
    } catch (error) {
      console.error('‚ùå Error logging photo:', error.message);
      return { success: false, error: error.message };
    }
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏ñ‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
  async getExistingPhotos(building, foundation, category = null) {
    try {
      console.log(`üìä Getting existing photos for ${building}-${foundation}-${category || 'all'}`);
      
      if (!sheets) {
        console.warn('‚ö†Ô∏è Google Sheets API not available, returning empty array');
        return [];
      }

      // TODO: Implement Google Sheets query
      return [];
    } catch (error) {
      console.error('‚ùå Error getting existing photos:', error.message);
      return [];
    }
  }

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏•‡∏á Final_Reports_Log
  async logReport(reportData) {
    try {
      console.log('üìÑ Logging report data:', reportData.filename);
      
      if (!sheets) {
        console.warn('‚ö†Ô∏è Google Sheets API not available, skipping report log');
        return { success: true, message: 'Report logged locally' };
      }

      // TODO: Implement Google Sheets logging
      return { success: true, message: 'Report logged successfully' };
    } catch (error) {
      console.error('‚ùå Error logging report:', error.message);
      return { success: false, error: error.message };
    }
  }

  // ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dashboard
  async getDashboardStats() {
    try {
      console.log('üìä Getting dashboard stats');
      
      if (!sheets) {
        console.warn('‚ö†Ô∏è Google Sheets API not available, returning mock stats');
        return this.getMockDashboardStats();
      }

      // TODO: Implement Google Sheets query
      return this.getMockDashboardStats();
    } catch (error) {
      console.error('‚ùå Error getting dashboard stats:', error.message);
      return this.getMockDashboardStats();
    }
  }

  // Mock dashboard data
  getMockDashboardStats() {
    return {
      notStarted: 5,
      partial: 3,
      completed: 2,
      details: [
        { building: 'A', foundation: 'F01', completed: 9, total: 9, percentage: 100 },
        { building: 'A', foundation: 'F02', completed: 6, total: 9, percentage: 67 },
        { building: 'A', foundation: 'F03', completed: 3, total: 9, percentage: 33 },
        { building: 'B', foundation: 'F01', completed: 0, total: 9, percentage: 0 },
        { building: 'B', foundation: 'F02', completed: 0, total: 9, percentage: 0 }
      ]
    };
  }
}

module.exports = new SheetsService();
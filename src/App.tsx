// Filename: src/App.tsx (REFACTORED for Pending Page UI)

import React, { useState, useEffect, useCallback } from 'react';
import { auth, db } from './firebase'; 
import { User, onAuthStateChanged, signOut } from 'firebase/auth';
import { doc, getDoc, DocumentData } from 'firebase/firestore'; 
import { api, Project, ProjectConfig } from './utils/api';
import Camera from './components/Camera';
import Reports from './components/Reports';
import AdminConfig from './components/AdminConfig';
import styles from './App.module.css'; 

// ‚úÖ [‡πÉ‡∏´‡∏°‡πà] 1. Import CSS Module ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Auth
import authStyles from './components/Auth.module.css'; 

import Login from './components/Login';
import Register from './components/Register';

import { 
  FiCamera,
  FiBarChart2,
  FiSettings,
  FiLogOut,
  FiHome
} from 'react-icons/fi';

type View = 'projects' | 'camera' | 'reports' | 'admin';

export interface UserProfile extends DocumentData {
  uid: string;
  email: string;
  displayName: string;
  assignedProjectId: string | null; 
  role: 'user' | 'admin' | 'god';
  status: 'pending' | 'approved' | 'rejected';
}

function App() {
  // --- (States ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  const [currentUser, setCurrentUser] = useState<User | null>(null);
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);
  const [isAuthLoading, setIsAuthLoading] = useState(true);
  const [isProfileLoading, setIsProfileLoading] = useState(false);
  const [authView, setAuthView] = useState<'login' | 'register'>('login');
  const [projects, setProjects] = useState<Project[]>([]);
  const [selectedProject, setSelectedProject] = useState<Project | null>(null);
  const [projectConfig, setProjectConfig] = useState<ProjectConfig | null>(null);
  const [isLoading, setIsLoading] = useState(true); 
  const [error, setError] = useState<string | null>(null);
  const [view, setView] = useState<View>('projects');

  // --- (useEffect ‡πÅ‡∏•‡∏∞ Callbacks ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      setCurrentUser(user);
      setIsAuthLoading(false);
      if (!user) {
        setUserProfile(null);
        setSelectedProject(null);
        setProjectConfig(null);
        setView('projects'); 
      }
    });
    return () => unsubscribe();
  }, []);

  useEffect(() => {
    const fetchUserProfile = async () => {
      if (currentUser) {
        setIsProfileLoading(true);
        const userDocRef = doc(db, 'users', currentUser.uid);
        const userDocSnap = await getDoc(userDocRef);
        if (userDocSnap.exists()) {
          setUserProfile(userDocSnap.data() as UserProfile);
        } else {
          console.error('Error: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Firestore!');
          signOut(auth);
        }
        setIsProfileLoading(false);
      }
    };
    fetchUserProfile();
  }, [currentUser]);

  const fetchProjects = useCallback(async () => {
    setIsLoading(true); 
    setError(null);
    const response = await api.getProjects();
    if (response.success && response.data) {
      setProjects(response.data);
    } else {
      setError(response.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£');
    }
    setIsLoading(false); 
  }, []);

  const fetchProjectConfig = useCallback(async () => {
    if (!selectedProject) return;
    setIsLoading(true); 
    setError(null);
    const response = await api.getProjectConfig(selectedProject.id);
    if (response.success && response.data) {
      setProjectConfig(response.data);
    } else {
      setError(response.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î Config ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£');
    }
    setIsLoading(false);
  }, [selectedProject]);

  useEffect(() => {
    if (userProfile && userProfile.status === 'approved') {
      fetchProjects();
    }
  }, [userProfile, fetchProjects]);

  useEffect(() => {
    if (selectedProject) {
      fetchProjectConfig();
    }
  }, [selectedProject, fetchProjectConfig]);

  useEffect(() => {
    if (projectConfig && view === 'projects') {
      setView('camera');
    }
  }, [projectConfig, view]);

  const handleBackToProjects = () => {
    setSelectedProject(null);
    setProjectConfig(null);
    setView('projects');
  };
  
  const handleLogout = async () => {
    await signOut(auth);
  };

  // --- (‡∏™‡πà‡∏ß‡∏ô Render) ---

  if (isAuthLoading) {
    return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå...</div>;
  }
  
  if (!currentUser) {
    if (authView === 'login') {
      return <Login onSwitchToRegister={() => setAuthView('register')} />;
    } else {
      return <Register onSwitchToLogin={() => setAuthView('login')} />;
    }
  }

  if (isProfileLoading) {
    return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ...</div>;
  }

  if (!userProfile) {
     return (<div className="error-container"><p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Profile</p><button onClick={handleLogout}>Log Out</button></div>);
  }
  if (userProfile.status === 'rejected') {
    return (<div className="error-container"><p>‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò</p><button onClick={handleLogout}>Log Out</button></div>);
  }

  // ‚úÖ [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
  if (userProfile.status === 'pending') {
    return (
      <div className={authStyles.authPage}> {/* <-- ‡πÉ‡∏ä‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏µ‡∏Ñ‡∏£‡∏µ‡∏° */}
        {/* <-- ‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Register Success --> */}
        <div className={authStyles.successContainer}> 
          <h2 style={{ color: '#856404' }}>‚è≥ ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</h2> {/* <-- [‡πÉ‡∏´‡∏°‡πà] ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á/‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• */}
          <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, {userProfile.displayName}!</p>
          <p>‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å Admin</p>
          {/* <-- ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå Secondary ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ --> */}
          <button onClick={handleLogout} className={authStyles.buttonSecondary} style={{ marginTop: '20px' }}>
            Log Out
          </button>
        </div>
      </div>
    );
  }

  // (‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á Render ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
  if (isLoading && projects.length === 0) {
     return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£...</div>;
  }
  if (error) {
     return (<div className="error-container"><p>{error}</p><button onClick={handleLogout}>Log Out</button></div>);
  }
  
  if (userProfile.role === 'god') {
    if (!selectedProject) {
      return (
        <div className={styles.projectListContainer}>
          <h1>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ (God Mode)</h1>
          {projects.map((project) => (
            <div
              key={project.id}
              className={styles.projectCard}
              onClick={() => setSelectedProject(project)} 
            >
              {project.projectName}
            </div>
          ))}
          <button onClick={handleLogout} style={{ marginTop: '30px' }}>Log Out</button>
        </div>
      );
    }
  } else {
    const userProject = projects.find(p => p.id === userProfile.assignedProjectId);
    if (!userProject) {
       return (<div className="error-container"><p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ({userProfile.assignedProjectId}) ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà</p><button onClick={handleLogout}>Log Out</button></div>);
    }
    if (!selectedProject) {
       setSelectedProject(userProject);
       return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì...</div>;
    }
  }

  if (isLoading && selectedProject) {
     return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î Config...</div>;
  }
  
  return (
    <div className={styles.App}>
      <header className={styles.appHeader}>
        {userProfile.role === 'god' ? (
          <button className={styles.appHeaderBackButton} onClick={handleBackToProjects} title="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£">
            <FiHome /> 
          </button>
        ) : (
          <button className={styles.appHeaderBackButton} onClick={handleLogout} title="Log Out" style={{ fontSize: '1.2em' }}>
            <FiLogOut /> 
          </button>
        )}
        
        <div className={styles.appHeaderTitle} title={selectedProject.projectName}>
          {selectedProject.projectName}
        </div>
        <div style={{ width: '40px' }}></div>
      </header>

      <nav className={styles.bottomNav}>
        <div className={styles.sidebarHeader}>
          <div className={styles.sidebarProjectName} title={selectedProject.projectName}>
            {selectedProject.projectName}
          </div>
          <div style={{ padding: '5px 0', fontSize: '0.9em', color: '#ccc' }}>
             üë§ {userProfile.displayName} ({userProfile.role})
          </div>
          
          {userProfile.role === 'god' ? (
            <button className={styles.sidebarBackButton} onClick={handleBackToProjects} title="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£">
              (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)
            </button>
          ) : (
            <button className={styles.sidebarBackButton} onClick={handleLogout} title="Log Out">
              (Log Out)
            </button>
          )}
        </div>

        <button
          className={`${styles.navButton} ${view === 'camera' ? styles.active : ''}`}
          onClick={() => setView('camera')}
        >
          <span className={styles.icon}><FiCamera /></span> 
          <span>‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ</span>
        </button>

        <button
          className={`${styles.navButton} ${view === 'reports' ? styles.active : ''}`}
          onClick={() => setView('reports')}
        >
          <span className={styles.icon}><FiBarChart2 /></span> 
          <span>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</span>
        </button>
        
        {(userProfile.role === 'admin' || userProfile.role === 'god') && (
          <button
            className={`${styles.navButton} ${view === 'admin' ? styles.active : ''}`}
            onClick={() => setView('admin')}
          >
            <span className={styles.icon}><FiSettings /></span> 
            <span>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</span>
          </button>
        )}
      </nav>

      <main className={view === 'camera' ? styles.contentAreaFull : styles.contentArea}>
        {view === 'camera' && projectConfig && (
          <Camera
            qcTopics={projectConfig}
            projectId={selectedProject.id}
            projectName={selectedProject.projectName}
          />
        )}

        {view === 'reports' && projectConfig && (
          <Reports
            projectId={selectedProject.id}
            projectName={selectedProject.projectName}
            projectConfig={projectConfig}
          />
        )}

        {view === 'admin' && projectConfig && (userProfile.role === 'admin' || userProfile.role === 'god') && (
          <AdminConfig
            projectId={selectedProject.id}
            projectName={selectedProject.projectName}
            projectConfig={projectConfig}
            onConfigUpdated={() => fetchProjectConfig()}
            currentUserProfile={userProfile} 
          />
        )}
         {view === 'admin' && (userProfile.role === 'user') && (
          <div style={{ padding: '20px' }}>
            <h2>Access Denied</h2>
            <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏™‡πà‡∏ß‡∏ô "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£"</p>
          </div>
         )}

      </main>
    </div>
  );
}

export default App;
// Filename: src/App.tsx (REFACTORED for God Mode)

import React, { useState, useEffect, useCallback } from 'react';
import { auth, db } from './firebase'; 
import { User, onAuthStateChanged, signOut } from 'firebase/auth';
import { doc, getDoc, DocumentData } from 'firebase/firestore'; 
import { api, Project, ProjectConfig } from './utils/api';
import Camera from './components/Camera';
import Reports from './components/Reports';
import AdminConfig from './components/AdminConfig';
import styles from './App.module.css'; 
import Login from './components/Login';
import Register from './components/Register';

const ICONS = {
  PROJECTS: 'üèóÔ∏è',
  CAMERA: 'üì∑',
  REPORTS: 'üìä',
  ADMIN: '‚öôÔ∏è'
};
type View = 'projects' | 'camera' | 'reports' | 'admin';

export interface UserProfile extends DocumentData {
  uid: string;
  email: string;
  displayName: string;
  assignedProjectId: string | null; // [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô null
  role: 'user' | 'admin' | 'god';
  status: 'pending' | 'approved' | 'rejected';
}

function App() {
  // --- Auth States ---
  const [currentUser, setCurrentUser] = useState<User | null>(null);
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);
  const [isAuthLoading, setIsAuthLoading] = useState(true);
  const [isProfileLoading, setIsProfileLoading] = useState(false);
  const [authView, setAuthView] = useState<'login' | 'register'>('login');

  // --- App States (‡πÄ‡∏î‡∏¥‡∏°) ---
  const [projects, setProjects] = useState<Project[]>([]);
  const [selectedProject, setSelectedProject] = useState<Project | null>(null);
  const [projectConfig, setProjectConfig] = useState<ProjectConfig | null>(null);
  const [isLoading, setIsLoading] = useState(true); // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î Projects/Config
  const [error, setError] = useState<string | null>(null);
  const [view, setView] = useState<View>('projects');

  // --- Auth useEffect (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      setCurrentUser(user);
      setIsAuthLoading(false);
      if (!user) {
        setUserProfile(null);
        setSelectedProject(null);
        setProjectConfig(null);
        setView('projects'); 
      }
    });
    return () => unsubscribe();
  }, []);

  // --- Profile useEffect (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  useEffect(() => {
    const fetchUserProfile = async () => {
      if (currentUser) {
        setIsProfileLoading(true);
        const userDocRef = doc(db, 'users', currentUser.uid);
        const userDocSnap = await getDoc(userDocRef);
        if (userDocSnap.exists()) {
          setUserProfile(userDocSnap.data() as UserProfile);
        } else {
          console.error('Error: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Firestore!');
          signOut(auth);
        }
        setIsProfileLoading(false);
      }
    };
    fetchUserProfile();
  }, [currentUser]);

  // --- Data Fetching Callbacks (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  const fetchProjects = useCallback(async () => {
    setIsLoading(true); // <-- [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] ‡πÉ‡∏ä‡πâ isLoading ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
    setError(null);
    const response = await api.getProjects();
    if (response.success && response.data) {
      setProjects(response.data);
    } else {
      setError(response.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£');
    }
    setIsLoading(false); // <-- [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
  }, []);

  const fetchProjectConfig = useCallback(async () => {
    if (!selectedProject) return;
    setIsLoading(true); 
    setError(null);
    const response = await api.getProjectConfig(selectedProject.id);
    if (response.success && response.data) {
      setProjectConfig(response.data);
    } else {
      setError(response.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î Config ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£');
    }
    setIsLoading(false);
  }, [selectedProject]);

  // --- Data Fetching useEffects (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  useEffect(() => {
    if (userProfile && userProfile.status === 'approved') {
      fetchProjects();
    }
  }, [userProfile, fetchProjects]);

  useEffect(() => {
    if (selectedProject) {
      fetchProjectConfig();
    }
  }, [selectedProject, fetchProjectConfig]);

  useEffect(() => {
    if (projectConfig && view === 'projects') {
      setView('camera');
    }
  }, [projectConfig, view]);

  // --- Handlers (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ---
  const handleBackToProjects = () => {
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢ "God" ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    setSelectedProject(null);
    setProjectConfig(null);
    setView('projects');
  };
  
  const handleLogout = async () => {
    await signOut(auth);
  };

  // ========== [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ RENDER ‡∏´‡∏•‡∏±‡∏Å ==========

  // 1. ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î Auth
  if (isAuthLoading) {
    return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå...</div>;
  }
  
  // 2. ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà Log-in
  if (!currentUser) {
    if (authView === 'login') {
      return <Login onSwitchToRegister={() => setAuthView('register')} />;
    } else {
      return <Register onSwitchToLogin={() => setAuthView('login')} />;
    }
  }

  // 3. ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î Profile
  if (isProfileLoading) {
    return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ...</div>;
  }

  // 4. ‡∏°‡∏µ Profile ‡πÅ‡∏ï‡πà Status ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  if (!userProfile) {
     return (<div className="error-container"><p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Profile</p><button onClick={handleLogout}>Log Out</button></div>);
  }
  if (userProfile.status === 'rejected') {
    return (<div className="error-container"><p>‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò</p><button onClick={handleLogout}>Log Out</button></div>);
  }
  if (userProfile.status === 'pending') {
    return (<div className="error-container" style={{ textAlign: 'center' }}><h2>‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</h2><p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, {userProfile.displayName}!</p><p>‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</p><button onClick={handleLogout} style={{ marginTop: '20px' }}>Log Out</button></div>);
  }

  // 5. [‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!] User Log-in ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞ Status "approved"
  
  // 5.1 ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Error ‡∏´‡∏£‡∏∑‡∏≠ Loading (Projects)
  if (isLoading && projects.length === 0) {
     return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£...</div>;
  }
  if (error) {
     return (<div className="error-container"><p>{error}</p><button onClick={handleLogout}>Log Out</button></div>);
  }

  // ========== [!!!] 5.2 FORK LOGIC ‡∏ï‡∏≤‡∏° ROLE [!!!] ==========
  
  if (userProfile.role === 'god') {
    // --- GOD USER FLOW ---
    // God ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

    if (!selectedProject) {
      // (‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å App.tsx ‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)
      return (
        <div className={styles.projectListContainer}>
          <h1>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ (God Mode)</h1>
          {projects.map((project) => (
            <div
              key={project.id}
              className={styles.projectCard}
              onClick={() => setSelectedProject(project)} // <-- God ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
            >
              {project.projectName}
            </div>
          ))}
          <button onClick={handleLogout} style={{ marginTop: '30px' }}>Log Out</button>
        </div>
      );
    }
    // ‡∏ñ‡πâ‡∏≤ God ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Project ‡πÅ‡∏•‡πâ‡∏ß (selectedProject != null)
    // ‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏∞‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ Render ‡πÅ‡∏≠‡∏õ‡∏´‡∏•‡∏±‡∏Å (‡∏Ç‡πâ‡∏≠ 6)

  } else {
    // --- USER / ADMIN FLOW ---
    // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î

    const userProject = projects.find(p => p.id === userProfile.assignedProjectId);

    if (!userProject) {
       return (<div className="error-container"><p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ({userProfile.assignedProjectId}) ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà</p><button onClick={handleLogout}>Log Out</button></div>);
    }

    if (!selectedProject) {
       setSelectedProject(userProject);
       // (‡∏à‡∏∞ re-render ‡πÅ‡∏•‡∏∞‡πÑ‡∏õ‡∏î‡∏∂‡∏á Config)
       return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì...</div>;
    }
  }

  // 5.3 ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Loading (Config)
  // (‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å User/Admin ‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ God ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏≠‡∏á)
  if (isLoading && selectedProject) {
     return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î Config...</div>;
  }

  // ========== 6. RENDER ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏≠‡∏õ‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°) ==========
  
  return (
    <div className={styles.App}>
      {/* 1. Top Header (Mobile) */}
      <header className={styles.appHeader}>
        {/* [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] ‡∏õ‡∏∏‡πà‡∏°‡∏ã‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡∏à‡∏∞‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏≤‡∏° Role */}
        {userProfile.role === 'god' ? (
          <button className={styles.appHeaderBackButton} onClick={handleBackToProjects} title="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£">
            üèóÔ∏è
          </button>
        ) : (
          <button className={styles.appHeaderBackButton} onClick={handleLogout} title="Log Out" style={{ fontSize: '1.2em' }}>
            üö™
          </button>
        )}
        
        <div className={styles.appHeaderTitle} title={selectedProject.projectName}>
          {selectedProject.projectName}
        </div>
        <div style={{ width: '40px' }}></div>
      </header>

      {/* 2. Sidebar (Desktop) */}
      <nav className={styles.bottomNav}>
        <div className={styles.sidebarHeader}>
          <div className={styles.sidebarProjectName} title={selectedProject.projectName}>
            {selectedProject.projectName}
          </div>
          <div style={{ padding: '5px 0', fontSize: '0.9em', color: '#ccc' }}>
             üë§ {userProfile.displayName} ({userProfile.role})
          </div>
          
          {/* [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£/Logout ‡πÉ‡∏ô Sidebar */}
          {userProfile.role === 'god' ? (
            <button className={styles.sidebarBackButton} onClick={handleBackToProjects} title="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£">
              (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)
            </button>
          ) : (
            <button className={styles.sidebarBackButton} onClick={handleLogout} title="Log Out">
              (Log Out)
            </button>
          )}
        </div>

        {/* --- ‡πÄ‡∏°‡∏ô‡∏π Navigation --- */}
        <button
          className={`${styles.navButton} ${view === 'camera' ? styles.active : ''}`}
          onClick={() => setView('camera')}
        >
          <span className={styles.icon}>{ICONS.CAMERA}</span>
          <span>‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ</span>
        </button>

        <button
          className={`${styles.navButton} ${view === 'reports' ? styles.active : ''}`}
          onClick={() => setView('reports')}
        >
          <span className={styles.icon}>{ICONS.REPORTS}</span>
          <span>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</span>
        </button>
        
        {/* [‡πÉ‡∏´‡∏°‡πà] ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏° Admin ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô 'user' ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ */}
        {(userProfile.role === 'admin' || userProfile.role === 'god') && (
          <button
            className={`${styles.navButton} ${view === 'admin' ? styles.active : ''}`}
            onClick={() => setView('admin')}
          >
            <span className={styles.icon}>{ICONS.ADMIN}</span>
            <span>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</span>
          </button>
        )}
      </nav>

      {/* 3. Content Area */}
      <main className={view === 'camera' ? styles.contentAreaFull : styles.contentArea}>
        {view === 'camera' && projectConfig && (
          <Camera
            qcTopics={projectConfig}
            projectId={selectedProject.id}
            projectName={selectedProject.projectName}
          />
        )}

        {view === 'reports' && projectConfig && (
          <Reports
            projectId={selectedProject.id}
            projectName={selectedProject.projectName}
            projectConfig={projectConfig}
          />
        )}

        {/* [‡πÉ‡∏´‡∏°‡πà] ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ User ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤ Admin */}
        {view === 'admin' && projectConfig && (userProfile.role === 'admin' || userProfile.role === 'god') && (
          <AdminConfig
            projectId={selectedProject.id}
            projectName={selectedProject.projectName}
            projectConfig={projectConfig}
            onConfigUpdated={() => fetchProjectConfig()}
            currentUserProfile={userProfile} // <-- [‡πÉ‡∏´‡∏°‡πà] ‡∏™‡πà‡∏á Profile ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
          />
        )}
        {/* [‡πÉ‡∏´‡∏°‡πà] ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡πâ‡∏≤ User ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ */}
         {view === 'admin' && (userProfile.role === 'user') && (
          <div style={{ padding: '20px' }}>
            <h2>Access Denied</h2>
            <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏™‡πà‡∏ß‡∏ô "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£"</p>
          </div>
         )}

      </main>
    </div>
  );
}

export default App;